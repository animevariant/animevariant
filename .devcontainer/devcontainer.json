{
  "name": "svelte-manga-api-dev",
  "dockerComposeFile": ["../docker-compose.yml"],
  "service": "svelte-manga-api-dev",
  "workspaceFolder": "/workspace",
  "shutdownAction": "none",
  "customizations": {
    "vscode": {
      "extensions": [
        "ms-python.python",
        "ms-python.vscode-pylance",
        "ms-python.autopep8",
        "ms-python.debugpy",
        "ms-python.isort",
        "donjayamanne.python-environment-manager",
        "donjayamanne.python-extension-pack",
        "etmoffat.pip-packages",
        "aaron-bond.better-comments",
        "formulahendry.auto-rename-tag",
        "formulahendry.code-runner",
        "github.vscode-pull-request-github",
        "ms-azuretools.vscode-docker",
        "ms-vscode-remote.remote-containers",
        "ms-vscode-remote.remote-ssh",
        "ms-vscode-remote.vscode-remote-extensionpack",
        "ms-toolsai.jupyter",
        "ritwickdey.liveserver",
        "visualstudioexptteam.vscodeintellicode",
        "vscode-icons-team.vscode-icons",
        "esbenp.prettier-vscode",
        "jpotterm.simple-vim",
        "wakatime.vscode-wakatime",
        "ms-azuretools.vscode-docker"
      ],
      "settings": {
        "python.pythonPath": "/usr/local/bin/python",
        "python.linting.pylintEnabled": false,
        "python.linting.flake8Enabled": true,
        "python.linting.flake8Args": ["--max-line-length=88"],
        "python.formatting.provider": "ms-python.python",
        "editor.formatOnSave": true
      }
    }
  },

  ////////////////////////////////////
  // UNCOMMENT to build manually
  ////////////////////////////////////
  //"build": {
  //	"dockerfile": "Dockerfile",
  //	"target": "devcontainer"
  //},

  ////////////////////////////////////
  // Linux Setup (X11)
  ////////////////////////////////////
  //"mounts": [
  //"source=/tmp/.X11-unix,target=/tmp/.X11-unix,type=bind,consistency=cached",
  //],
  //"containerEnv": {},

  ////////////////////////////////////
  // Windows Setup (WSL2)
  ////////////////////////////////////
  //   "mounts": [
  // 	"source=/mnt/wslg,target=/mnt/wslg,type=bind,consistency=cached"
  //   ],
  // "containerEnv": {
  // 	"PULSE_SERVER": "/mnt/wslg/PulseServer"
  // },

  ////////////////////////////////////
  // Windows Setup (ucuntu docker container), after installing pulseaudio on the host machine
  ////////////////////////////////////
  "mounts": ["source=/dev/snd,target=/dev/snd,type=bind,consistency=cached"],
  "containerEnv": {
    "PULSE_SERVER": "host.docker.internal"
  },

  ////////////////////////////////////
  // MacOS Setup (X11)
  // You need to install XQuartz and pulseaudio
  ////////////////////////////////////
  //"containerEnv": {
  //  "DISPLAY": "docker.for.mac.host.internal:0",
  //	"PULSE_SERVER": "docker.for.mac.host.internal:4713"
  //},
  //"mounts": [
  //	"source=/tmp/.X11-unix,target=/tmp/.X11-unix,type=bind,consistency=cached",
  //	"source=${localEnv:HOME}/.config/pulse,target=/home/osdev/.config/pulse,type=bind,consistency=cached"
  //],

  "postCreateCommand": "pip install -r requirements.txt"
}
