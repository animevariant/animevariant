---
- name: Include Cloudflare domain and zone IDs variables
  ansible.builtin.include_vars:
    file: "vars/cloudflare_vars.yml"


- name: Debug cloudflare_zone_ids variable content
  ansible.builtin.debug:
    var: cloudflare_zone_ids

- name: Generate Docker Compose file with dynamic domain names
  ansible.builtin.template:
    src: "docker/docker-compose.yaml.j2"
    dest: "{{ ansible_env.HOME }}/docker-compose.yml"
    mode: "0644"
    
- name: Generate http NGINX configuration with dynamic domain names
  ansible.builtin.template:
    src: "nginx/http.conf.j2"
    dest: "{{ ansible_env.HOME }}/nginx/nginx.conf"
    mode: "0644"

- name: Pull the latest images with Docker Compose
  command: docker-compose pull
  become: true # Escalate if necessary for Docker commands
  args:
    chdir: "{{ ansible_env.HOME }}/" # Ensure this points to where docker-compose.yml is located

- name: Deploy services using Docker Compose
  command: docker-compose up -d nginx
  become: true # Escalate if necessary for Docker commands
  args:
    chdir: "{{ ansible_env.HOME }}/" # Ensure this points to where docker-compose.yml is located

- name: Obtain SSL certificates with Certbot
  command: docker-compose run --rm certbot
  become: true
  args:
    chdir: "{{ ansible_env.HOME }}/"

- name: Generate https NGINX configuration with dynamic domain names
  ansible.builtin.template:
    src: "nginx/https.conf.j2"
    dest: "{{ ansible_env.HOME }}/nginx/nginx.conf"
    mode: "0644"

- name: Stop existing Docker Compose services
  command: docker-compose down --remove-orphans
  become: true
  args:
    chdir: "{{ ansible_env.HOME }}/"

- name: Deploy services using Docker Compose
  command: docker-compose up -d
  become: true
  args:
    chdir: "{{ ansible_env.HOME }}/"

- name: Delete all hanging stuff
  command: docker system prune -a -f --volumes
  become: true
  args:
    chdir: "{{ ansible_env.HOME }}/"

- name: Schedule automated certificate renewal
  ansible.builtin.cron:
    name: "Renew Let's Encrypt certificates"
    day: "1"
    month: "*/2"
    hour: "5"
    minute: "0"
    job: "cd {{ ansible_env.HOME }} && docker-compose run --rm certbot renew && docker-compose exec nginx nginx -s reload"
    user: ubuntu

